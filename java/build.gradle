plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'io.github.plainblock.mobydick'
version '1.0.0'

repositories {
    mavenCentral()
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'io.github.plainblock.mobydick'
    mainClass = 'io.github.plainblock.mobydick.MobyDick'
}

javafx {
    version = '17.0.2'
    modules = ['javafx.controls', 'javafx.fxml']
}

ext {
    bootstrapVersion = '0.4.0'
    hibernateVersion = '5.6.10.Final'
    dialectVersion = '0.1.2'
    jacksonVersion = '2.13.3'
    junitVersion = '5.9.0'
    logbackVersion = '1.2.11'
    sqliteVersion = '3.39.2.0'
}

dependencies {
    implementation("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
    implementation("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
    implementation("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
    implementation("com.github.gwenn:sqlite-dialect:${dialectVersion}")
    implementation("ch.qos.logback:logback-classic:${logbackVersion}")
    implementation("org.hibernate:hibernate-core:${hibernateVersion}")
    implementation("org.kordamp.bootstrapfx:bootstrapfx-core:${bootstrapVersion}")
    implementation("org.xerial:sqlite-jdbc:${sqliteVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'io.github.plainblock.mobydick'
    }
}

jlinkZip {
    group = 'distribution'
}